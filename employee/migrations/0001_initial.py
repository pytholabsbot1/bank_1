# Generated by Django 3.0.3 on 2020-05-26 18:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import employee.emp_models.model_roles
import employee.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash', models.FloatField(blank=True, default=0.0, null=True)),
                ('bank', models.FloatField(blank=True, default=0.0, null=True)),
                ('n_10', models.IntegerField(default=0)),
                ('n_20', models.IntegerField(default=0)),
                ('n_50', models.IntegerField(default=0)),
                ('n_100', models.IntegerField(default=0)),
                ('n_200', models.IntegerField(default=0)),
                ('n_500', models.IntegerField(default=0)),
                ('n_2000', models.IntegerField(default=0)),
                ('c_1', models.IntegerField(default=0)),
                ('c_2', models.IntegerField(default=0)),
                ('c_5', models.IntegerField(default=0)),
                ('c_10', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Bank_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Basic_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('age', models.IntegerField(null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Male', max_length=10, null=True)),
                ('father_name', models.CharField(max_length=100, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('current_address', models.CharField(max_length=1000, null=True)),
                ('village', models.CharField(max_length=100, null=True)),
                ('area', models.CharField(max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('email_id', models.EmailField(blank=True, max_length=100, null=True)),
                ('permanent_address', models.CharField(max_length=1000, null=True)),
                ('mobile_number_1', models.CharField(max_length=10, null=True)),
                ('mobile_number_2', models.CharField(blank=True, max_length=10, null=True)),
                ('landline_number', models.CharField(blank=True, max_length=15, null=True)),
                ('photograph', models.ImageField(upload_to='users/images')),
                ('signature', models.ImageField(upload_to='users/images')),
                ('thumb_impression', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('id_number', models.CharField(max_length=20, null=True)),
                ('id_photograph1', models.ImageField(upload_to='users/images')),
                ('id_photograph2', models.ImageField(blank=True, default='users/images/default.jpg', null=True, upload_to='users/images')),
                ('id_photograph3', models.ImageField(blank=True, default='users/images/default.jpg', null=True, upload_to='users/images')),
                ('id_photograph4', models.ImageField(blank=True, default='users/images/default.jpg', null=True, upload_to='users/images')),
            ],
        ),
        migrations.CreateModel(
            name='Branch_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='cash_collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.IntegerField(default=employee.models.get_cashcol_billnum, null=True, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('total_society_deposit', models.FloatField(blank=True, null=True)),
                ('total_loan_deposit', models.FloatField(blank=True, null=True)),
                ('tot_reciept', models.IntegerField(blank=True, default=0, null=True)),
                ('tot_payment', models.IntegerField(blank=True, default=0, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('n_10', models.IntegerField(default=0)),
                ('n_20', models.IntegerField(default=0)),
                ('n_50', models.IntegerField(default=0)),
                ('n_100', models.IntegerField(default=0)),
                ('n_200', models.IntegerField(default=0)),
                ('n_500', models.IntegerField(default=0)),
                ('n_2000', models.IntegerField(default=0)),
                ('c_1', models.IntegerField(default=0)),
                ('c_2', models.IntegerField(default=0)),
                ('c_5', models.IntegerField(default=0)),
                ('c_10', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='City_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepositChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('emi_type', models.CharField(choices=[('days', 'days'), ('months', 'months'), ('one time', 'one time')], default='one time', max_length=100, null=True)),
                ('amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='deposits_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secure_key', models.CharField(blank=True, default=employee.models.rand_int, max_length=12, null=True)),
                ('society_account_number', models.CharField(blank=True, default=employee.models.dp_code, max_length=500, null=True, unique=True)),
                ('client_bank_account_number', models.CharField(blank=True, max_length=500, null=True)),
                ('ifsc_code', models.CharField(blank=True, default='IFSC', max_length=20, null=True)),
                ('account_opening_date', models.DateField(default=django.utils.timezone.now)),
                ('account_opening_amount', models.FloatField(default=0.0, null=True)),
                ('interest_collected', models.FloatField(blank=True, default=0.0, null=True)),
                ('maturity_interest', models.FloatField(blank=True, default=0.0, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DEACTIVE', 'DEACTIVE'), ('SUSPENDED', 'SESPENDED')], default='ACTIVE', max_length=100)),
                ('db', models.BooleanField(default=True)),
                ('balance', models.FloatField(blank=True, default=0.0, null=True)),
                ('maturity_date', models.DateField(blank=True, null=True)),
                ('maturity_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('counter_number', models.IntegerField(null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.DepositChoice')),
                ('client_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposit_bank_choice', to='employee.Bank_Choice', to_field='bank_choice')),
            ],
        ),
        migrations.CreateModel(
            name='District_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Head',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Id_Type_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_type_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relation_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Only one word allowed .. ex - FD_new , RD_monsoon', max_length=100, unique=True, validators=[django.core.validators.RegexValidator('[A-Za-z0-9]+', 'Only alphanumeric characters are allowed.')])),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('duration_type', models.CharField(choices=[('years', 'years'), ('months', 'months'), ('days', 'days')], default='years', max_length=100, null=True)),
                ('interest_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('per_day_roi', models.FloatField(blank=True, default=0.0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State_Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_choice', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Head',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadDocs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_num', models.CharField(help_text='\n    Hint :<br><br>\n    Nomination Certificate : Nomination Number <br>\n    Cash Collection : Employee Nomination Number<br>\n    Diary : Society / Loan Account number<br>\n    Maturity : Society Account number<br>\n    Loan NOC : Loan Account Number  <br>\n    FD Bond : Society ACC no.<br>\n    Other : for ther documents<br><br>\n    ', max_length=100)),
                ('doc', models.FileField(upload_to='docs/')),
                ('TYPE', models.CharField(choices=[('Nomination Certificate', 'Nomination Certificate'), ('Cash Collection', 'Cash Collection'), ('Loan NOC', 'Loan NOC'), ('Maturity', 'Maturity'), ('FD Bond', 'FD Bond'), ('Loan Diary', 'Loan Diary'), ('Society Diary', 'Society Diary'), ('Loan Monthly / Onetime Reciept', 'Loan Monthly / Onetime Reciept'), ('Other', 'Other')], max_length=100)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_number', models.CharField(max_length=6, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('db', models.BooleanField(default=True)),
                ('transact_type', models.CharField(choices=[('Cr', 'Cr'), ('Dr', 'Dr')], default='Cr', max_length=50)),
                ('voucher_type', models.CharField(choices=[('Payment', 'Payment'), ('Journal', 'Journal'), ('Contra', 'Contra'), ('Reciept', 'Reciept')], default='Journal', max_length=50)),
                ('title', models.CharField(default='', max_length=50)),
                ('amount', models.FloatField()),
                ('n_10', models.IntegerField(default=0)),
                ('n_20', models.IntegerField(default=0)),
                ('n_50', models.IntegerField(default=0)),
                ('n_100', models.IntegerField(default=0)),
                ('n_200', models.IntegerField(default=0)),
                ('n_500', models.IntegerField(default=0)),
                ('n_2000', models.IntegerField(default=0)),
                ('c_1', models.IntegerField(default=0)),
                ('c_2', models.IntegerField(default=0)),
                ('c_5', models.IntegerField(default=0)),
                ('c_10', models.IntegerField(default=0)),
                ('curr_n_10', models.IntegerField(default=0)),
                ('curr_n_20', models.IntegerField(default=0)),
                ('curr_n_50', models.IntegerField(default=0)),
                ('curr_n_100', models.IntegerField(default=0)),
                ('curr_n_200', models.IntegerField(default=0)),
                ('curr_n_500', models.IntegerField(default=0)),
                ('curr_n_2000', models.IntegerField(default=0)),
                ('curr_c_1', models.IntegerField(default=0)),
                ('curr_c_2', models.IntegerField(default=0)),
                ('curr_c_5', models.IntegerField(default=0)),
                ('curr_c_10', models.IntegerField(default=0)),
                ('curr_cash', models.FloatField(blank=True)),
                ('curr_bank', models.FloatField(blank=True)),
                ('updated_cash', models.FloatField(blank=True)),
                ('updated_bank', models.FloatField(blank=True)),
                ('remarks', models.TextField(default='By Cash')),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.Head')),
                ('sub_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.Sub_Head')),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('basic_details_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='employee.Basic_Details')),
                ('nomination_number', models.CharField(default=employee.emp_models.model_roles.nom_num, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('account_nominee_name', models.CharField(max_length=100, null=True)),
                ('minor_checkbox', models.BooleanField(default=False)),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True)),
                ('guardian_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('category', models.CharField(choices=[('Society', 'Society'), ('Finance', 'Finance')], default='Society', max_length=10, null=True)),
                ('nomination_fees', models.FloatField(default=0.0, null=True)),
                ('sharing_amount', models.FloatField(default=0.0, null=True)),
                ('no_of_shares', models.IntegerField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            bases=('employee.basic_details',),
        ),
        migrations.CreateModel(
            name='employee_interview',
            fields=[
                ('basic_details_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='employee.Basic_Details')),
                ('nomination_number', models.CharField(default=employee.emp_models.model_roles.emp_num, help_text='Employee ID', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('interview_date', models.DateField(default=django.utils.timezone.now)),
                ('joined', models.BooleanField(default=False)),
                ('referal_name', models.CharField(blank=True, max_length=100, null=True)),
                ('referal_father', models.CharField(blank=True, max_length=100, null=True)),
                ('referal_mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('referal_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('referal_photograph', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('referal_signature', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('ref_id_1', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('ref_id_2', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('account_nominee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_nominee_contact', models.CharField(blank=True, max_length=10, null=True)),
                ('finance_coll', models.IntegerField(default=0)),
                ('deposit_coll', models.IntegerField(default=0)),
                ('upload_id_1', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('upload_id_2', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('upload_bank_passbook', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('upload_cheque', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
                ('upload_stamp_paper', models.ImageField(default='users/images/default.jpg', upload_to='users/images')),
            ],
            bases=('employee.basic_details',),
        ),
        migrations.CreateModel(
            name='withdrawl_entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.IntegerField(default=employee.models.get_withdrawl_billnum, unique=True)),
                ('amount_withdrawl_date', models.DateField(default=django.utils.timezone.now)),
                ('category', models.CharField(choices=[('Maturity', 'Maturity'), ('Prematurity', 'Prematurity'), ('closed', 'closed'), ('withdraw', 'withdraw')], max_length=100)),
                ('holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('available_amount', models.FloatField(null=True)),
                ('amount_withdrawl', models.FloatField(null=True)),
                ('intrest_amount', models.FloatField(default=0, null=True)),
                ('deduction_amount', models.FloatField(blank=True, default=0, null=True)),
                ('rest_amount', models.FloatField(blank=True, default=0, null=True)),
                ('paymode', models.CharField(choices=[('CASH', 'CASH'), ('CHEQUE', 'CHEQUE')], max_length=100)),
                ('cheque_no', models.CharField(blank=True, max_length=200, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('n_10', models.IntegerField(default=0)),
                ('n_20', models.IntegerField(default=0)),
                ('n_50', models.IntegerField(default=0)),
                ('n_100', models.IntegerField(default=0)),
                ('n_200', models.IntegerField(default=0)),
                ('n_500', models.IntegerField(default=0)),
                ('n_2000', models.IntegerField(default=0)),
                ('c_1', models.IntegerField(default=0)),
                ('c_2', models.IntegerField(default=0)),
                ('c_5', models.IntegerField(default=0)),
                ('c_10', models.IntegerField(default=0)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('society_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.deposits_table')),
            ],
        ),
        migrations.CreateModel(
            name='VoucherParticulars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('amount', models.IntegerField(default=0)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Voucher')),
            ],
        ),
        migrations.CreateModel(
            name='VoucherHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head', models.CharField(blank=True, max_length=200)),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Voucher')),
            ],
        ),
        migrations.CreateModel(
            name='Gaurantor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('father_name', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=500, null=True)),
                ('photograph', models.ImageField(upload_to='users/images')),
                ('ID_documents', models.FileField(upload_to='docs/')),
                ('contact', models.CharField(max_length=10)),
                ('no_finance', models.IntegerField(default=0)),
                ('expected_amount', models.IntegerField(default=0)),
                ('max_amount', models.IntegerField(default=0)),
            ],
            options={
                'unique_together': {('name', 'contact', 'father_name')},
            },
        ),
        migrations.CreateModel(
            name='finance_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_account_number', models.CharField(default=employee.models.fc_code, max_length=500, null=True, unique=True)),
                ('demanded_amount', models.FloatField(default=0.0, null=True)),
                ('loan_duration', models.IntegerField(null=True)),
                ('duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], default='Years', max_length=100, null=True)),
                ('emi_type', models.CharField(choices=[('Daily', 'Daily'), ('Monthly', 'Monthly'), ('Quaterly', 'Quaterly')], default='Years', max_length=100, null=True)),
                ('applied_date', models.DateField(default=django.utils.timezone.now)),
                ('stamp_photograph', models.ImageField(upload_to='users/images')),
                ('cheque_photograph', models.ImageField(upload_to='users/images')),
                ('category', models.CharField(choices=[('Loan', 'Loan'), ('Credit', 'Creit'), ('Morgage', 'Morgage')], default='Loan', max_length=100, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('expected_date', models.DateField(null=True)),
                ('expected_amount', models.FloatField(null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('gaurantor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Gaurantor')),
                ('loan_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.FinanceChoice')),
                ('agent_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.client')),
            ],
        ),
        migrations.CreateModel(
            name='emp_payments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('TYPE', models.CharField(choices=[('Society Payment', 'Society Payment'), ('Loan Payment', 'Loan Payment'), ('Expense', 'Expense'), ('Other', 'Other')], max_length=100)),
                ('amount', models.IntegerField(default=0)),
                ('cash_col', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.cash_collection')),
            ],
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Recieved', 'Recieved'), ('Dispathced', 'Dispathced')], max_length=100)),
                ('Submit_date', models.DateField(default=django.utils.timezone.now)),
                ('remarks', models.TextField(default='None')),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('cli', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.finance_table')),
            ],
        ),
        migrations.AddField(
            model_name='deposits_table',
            name='scheme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Scheme'),
        ),
        migrations.CreateModel(
            name='Cheque_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheque_number', models.CharField(blank=True, max_length=20)),
                ('cheque_date', models.DateField(blank=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receript_bank_choice', to='employee.Bank_Choice', to_field='bank_choice')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receipt_branch_choice', to='employee.Branch_Choice', to_field='branch_choice')),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Voucher')),
            ],
        ),
        migrations.CreateModel(
            name='cash_notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_10', models.IntegerField(default=0)),
                ('_20', models.IntegerField(default=0)),
                ('_50', models.IntegerField(default=0)),
                ('_100', models.IntegerField(default=0)),
                ('_200', models.IntegerField(default=0)),
                ('_500', models.IntegerField(default=0)),
                ('_2000', models.IntegerField(default=0)),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.Voucher')),
            ],
        ),
        migrations.AddField(
            model_name='basic_details',
            name='city',
            field=models.ForeignKey(default='DAUSA', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_city_choice', to='employee.City_Choice', to_field='city_choice'),
        ),
        migrations.AddField(
            model_name='basic_details',
            name='country',
            field=models.ForeignKey(default='INDIA', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_country_choice', to='employee.Country_Choice', to_field='country_choice'),
        ),
        migrations.AddField(
            model_name='basic_details',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_district_choice', to='employee.District_Choice', to_field='district_choice'),
        ),
        migrations.AddField(
            model_name='basic_details',
            name='id_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_id_type_choice', to='employee.Id_Type_Choice', to_field='id_type_choice'),
        ),
        migrations.AddField(
            model_name='basic_details',
            name='state',
            field=models.ForeignKey(default='RAJASTHAN', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_state_choice', to='employee.State_Choice', to_field='state_choice'),
        ),
        migrations.CreateModel(
            name='approved_finance_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secure_key', models.CharField(default=employee.models.rand_int, max_length=12, null=True)),
                ('client_bank_account_number', models.CharField(max_length=20, null=True)),
                ('ifsc_code', models.CharField(default='IFSC', max_length=20, null=True)),
                ('cheque_number', models.CharField(max_length=200, null=True)),
                ('loan_start_date', models.DateField(default=django.utils.timezone.now)),
                ('loan_end_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DEACTIVE', 'DEACTIVE'), ('SUSPENDED', 'SESPENDED')], default='ACTIVE', max_length=100)),
                ('db', models.BooleanField(default=True)),
                ('sanctioned_amount', models.FloatField(null=True)),
                ('total_intrest_amount', models.FloatField(default=0.0, null=True)),
                ('emi_delta', models.CharField(blank=True, max_length=50, null=True)),
                ('loan_duration', models.IntegerField(null=True)),
                ('duration_type', models.CharField(choices=[('years', 'years'), ('months', 'months'), ('days', 'days')], default='years', max_length=100, null=True)),
                ('roi', models.IntegerField(null=True)),
                ('no_of_emi', models.IntegerField(blank=True, null=True)),
                ('emi_type', models.CharField(choices=[('Daily', 'Daily'), ('Monthly', 'Monthly'), ('Quaterly', 'Quaterly')], default='Years', max_length=100, null=True)),
                ('emi_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('discount', models.FloatField(blank=True, default=0.0, null=True)),
                ('counter_number', models.IntegerField(null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('recieved', models.FloatField(blank=True, default=0.0, null=True)),
                ('total', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('client_bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finance_approval_bank_choice', to='employee.Bank_Choice', to_field='bank_choice')),
                ('finance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.finance_table', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='employee_joining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('joining_date', models.DateField(default=django.utils.timezone.now)),
                ('salary', models.FloatField(blank=True, null=True)),
                ('bonus', models.FloatField(default=0)),
                ('deduction', models.FloatField(default=0)),
                ('total', models.FloatField(blank=True, null=True)),
                ('employee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview')),
            ],
        ),
        migrations.AddField(
            model_name='deposits_table',
            name='agent_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview'),
        ),
        migrations.AddField(
            model_name='deposits_table',
            name='person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.client'),
        ),
        migrations.CreateModel(
            name='collection_finance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.IntegerField(default=employee.models.get_finance_billnum, null=True)),
                ('loan_emi_received_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('loan_emi_received', models.FloatField(blank=True, null=True)),
                ('penalty', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(default='By Cash', null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('finance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.approved_finance_table')),
                ('agent_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.client')),
            ],
        ),
        migrations.CreateModel(
            name='collection_deposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.IntegerField(default=employee.models.get_deposit_billnum, null=True)),
                ('payment_received_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('payment_received', models.FloatField(null=True)),
                ('previous_balance', models.FloatField(blank=True, null=True)),
                ('latest_intrest', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(default='By Cash', null=True)),
                ('created_time', models.TimeField(default=django.utils.timezone.now)),
                ('deposit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.deposits_table')),
                ('agent_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.client')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='agent_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='employee.employee_interview'),
        ),
        migrations.AddField(
            model_name='client',
            name='guardian_relation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_relation2_choice', to='employee.Relation_Choice', to_field='relation_choice'),
        ),
        migrations.AddField(
            model_name='client',
            name='nominee_relation',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_relation_choice', to='employee.Relation_Choice', to_field='relation_choice'),
        ),
        migrations.AddField(
            model_name='cash_collection',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee_interview'),
        ),
        migrations.AlterUniqueTogether(
            name='basic_details',
            unique_together={('last_name', 'father_name', 'mobile_number_1')},
        ),
        migrations.AddField(
            model_name='approved_finance_table',
            name='person',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.client'),
        ),
        migrations.AlterUniqueTogether(
            name='cash_collection',
            unique_together={('employee', 'date')},
        ),
    ]
